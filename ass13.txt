#include <iostream>
#include <stack>
#include <string>

bool isParenthesized(const std::string& expression) {
    std::stack<char> parenStack;

    for (char c : expression) {
        if (c == '(' || c == '[' || c == '{') {
            parenStack.push(c);
        } else if (c == ')' || c == ']' || c == '}') {
            if (parenStack.empty()) {
                return false;  
            }

            char top = parenStack.top();
            parenStack.pop();

            if ((c == ')' && top != '(') || (c == ']' && top != '[') || (c == '}' && top != '{')) {
                return false;
            }
        }
    }
    return parenStack.empty();
}

int main() {
    std::string expression;

    std::cout << "Enter an expression: ";
    std::cin >> expression;

    if (isParenthesized(expression)) {
        std::cout << "The expression is properly parenthesized." << std::endl;
    } else {
        std::cout << "The expression is not properly parenthesized." << std::endl;
    }

    return 0;
}
